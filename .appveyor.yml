# Copyright (c) 2016-2020 Knuth Project developers.
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.


branches:
  only:
    - master
    # - /^v\d+\.\d+\.\d+$/
    - dev
    - /^release-\d+\.\d+\.\d+$/
    - /^release_\d+\.\d+\.\d+$/
    - /^hotfix-\d+\.\d+\.\d+$/
    - /^hotfix_\d+\.\d+\.\d+$/
    - /^feature-ci-.+$/
    - /^feature_ci_.+$/
    - /^feature-appveyor-.+$/
    - /^feature_appveyor_.+$/

build: false

environment:
    PYTHON: "C:\\Python37"
    PYTHON_VERSION: "3.7.3"
    PYTHON_ARCH: "32"
    CONAN_STABLE_BRANCH_PATTERN: "master$" #"release/*"

install:

  - set PATH=%PYTHON%;%PYTHON%/Scripts/;%PATH%;
  - python.exe --version
  - python.exe -m pip install --upgrade pip

  - pip.exe install conan_package_tools==0.30.4 > NUL
  # - pip install kthbuild==0.0.14 > NUL
  - pip.exe install kthbuild --upgrade > NUL

  - conan user # It creates the conan data directory


test_script:
  - git submodule init
  - git submodule update
  # - git fetch --unshallow
  - git fetch origin master:master
  # - git tag
  # - git describe
  # - git describe master
  # - git describe origin
  # - python ci_utils/print_version.py 

  # - git config core.autocrlf
  # - python crlf.py
  # - findstr /r "\r\n" *.py & exit 0
  # - findstr /r "\r" *.py & exit 0

  # # - dir C:\MinGW
  # - set PATH=C:\MinGW\bin;%PATH%

  # - IF "%MINGW_CONFIGURATIONS%" NEQ "" (
  #     gcc --version
  #   )


  - ps: |
      If ($env:WAIT_FOR_DEPS -ne 1) {
        $a = python ci_utils/set_envvars_and_files.py
        Write-Host $a
        Invoke-Expression $a

        $ErrorActionPreference = 'SilentlyContinue'
        conan remote add kth https://api.bintray.com/conan/k-nuth/kth
        $ErrorActionPreference = 'Continue'

        # conan info . --only None
        # conan info . --only None -s compiler=gcc -s compiler.version=5 -s compiler.libcxx=libstdc++
        python ci_utils/process_conan_reqs.py

        $ErrorActionPreference = 'SilentlyContinue'
        conan remove "*" -f
        conan remote remove kth
        conan remote remove kthbuild_kth_temp_
        conan remote remove kthbuild_kth_temp_
        $ErrorActionPreference = 'Continue'
      }

  # - ps: |
  #     If ($env:WAIT_FOR_DEPS -eq 1) {
  #       conan user

  #       $ErrorActionPreference = 'SilentlyContinue'
  #       conan remote add kth_temp https://api.bintray.com/conan/k-nuth/kth
  #       $ErrorActionPreference = 'Continue'

  #       echo "waiting for infrastructure/0.X@kth/staging ..."
  #       conan search infrastructure/0.X@kth/staging -r kth_temp > $null
  #       while($env:lastExitCode -eq 1) {
  #         Write-Host "."
  #         Start-Sleep -s 10
  #         conan search infrastructure/0.X@kth/staging -r kth_temp > $null
  #       }
  #       Write-Host "infrastructure/0.X@kth/staging found"
  #     }

  - ps: |
      If ($env:WAIT_FOR_DEPS -eq 1) {
        conan user

        $ErrorActionPreference = 'SilentlyContinue'
        conan remote add kth_temp https://api.bintray.com/conan/k-nuth/kth
        $ErrorActionPreference = 'Continue'

        # python ci_utils/wait_for_deps.py domain
        python ci_utils/wait_for_deps.py
      }

  #- PowerShell .\.appveyor\build.ps1
  - python build.py

for:
  -
    branches:
      only:
        - /(dev|feature).*/    # Just development branches
    environment:
      # MINGW_CONFIGURATIONS: "8@x86_64@seh@posix"

      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      CONAN_VISUAL_VERSIONS: 16
      CONAN_VISUAL_RUNTIMES: MT
      KTH_RUN_TESTS: true
  -
    branches:
      only:
        - /(release|hotfix).+/    #Just releases
    environment:
      matrix:
        - WAIT_FOR_DEPS: 1
          APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
          CONAN_VISUAL_VERSIONS: 16
          CONAN_VISUAL_RUNTIMES: MT
          KTH_RUN_TESTS: true
        - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
          CONAN_VISUAL_VERSIONS: 16
          CONAN_VISUAL_RUNTIMES: MD
          KTH_RUN_TESTS: true

        - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
          CONAN_VISUAL_VERSIONS: 15
          CONAN_VISUAL_RUNTIMES: MT
          KTH_RUN_TESTS: true
          VS150COMNTOOLS: "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\Common7\\Tools\\"
        - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
          CONAN_VISUAL_VERSIONS: 15
          CONAN_VISUAL_RUNTIMES: MD
          KTH_RUN_TESTS: true
          VS150COMNTOOLS: "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\Common7\\Tools\\"

        # - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
        #   CONAN_VISUAL_VERSIONS: 14

        # - MINGW_CONFIGURATIONS: "9@x86_64@seh@posix"
        - MINGW_CONFIGURATIONS: "8@x86_64@seh@posix"
        # - MINGW_CONFIGURATIONS: "7@x86_64@seh@posix"
        # - MINGW_CONFIGURATIONS: "6@x86_64@seh@posix"
        # - MINGW_CONFIGURATIONS: "5@x86_64@seh@posix"
        # - MINGW_CONFIGURATIONS: "4.9@x86_64@seh@posix" 
  -
    branches:
      only:
        - master
    test_script:
      - echo "Stable packages are published in Release branches"
    install: 
      - echo "Stable packages are published in Release branches"

# matrix:
#   fast_finish: true     # set this flag to immediately finish build once one of the jobs fails.

